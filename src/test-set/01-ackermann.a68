COMMENT

This program is part of the Algol 68 Genie test set.

A small selection of the Algol 68 Genie regression test set is distributed 
with Algol 68 Genie. The purpose of those programs is to perform some checks 
to judge whether A68G behaves as expected.
None of these programs should end ungraciously with for instance an 
addressing fault.

COMMENT

PR quiet regression PR

#
 
@section Synopsis

Ackermann function, a paradigm total computable function that is not primitive recursive. 

All primitive recursive functions (that can also be computed iteratively) are total and 
computable, but not all total computable functions are primitive recursive.

This two-argument A(m, n) version is by PÃ©ter and Robinson (commonly called "the" Ackermann
function) is a paradigm total computable function that is not primitive recursive. 

The function f(n) = A(n, n) grows faster than any primitive recursive function, including 
the exponential function, the factorial function, and multi- and superfactorial functions.

The extremely deep recursion of this function is commonly used in testing programming language
implementations.

#

PROC ack = (INT m, n) INT:
     IF m = 0
     THEN n + 1
     ELSE (n = 0 | ack (m - 1, 1) | ack (m - 1, ack (m, n - 1)))
     FI;

PROC f = (INT n) INT: ack (n, n);

FOR m TO 3 
DO print (("f(", whole (m, 0), ") = ", whole (f (m), 0), newline));
   FOR n TO m 
   DO print (("A(", whole (m, 0), ", ", whole (n, 0), ") = ", whole (ack (m, n), 0), newline))
   OD
OD

#
Output:
f(1) = 3
A(1, 1) = 3
f(2) = 7
A(2, 1) = 5
A(2, 2) = 7
f(3) = 61
A(3, 1) = 13
A(3, 2) = 29
A(3, 3) = 61
#
